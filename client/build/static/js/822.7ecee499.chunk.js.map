{"version":3,"file":"static/js/822.7ecee499.chunk.js","mappings":"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","sources":["components/volunteer/NewSurveyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { FiUser, FiMapPin, FiCamera, FiFileText, FiCheckCircle, FiArrowLeft } from 'react-icons/fi';\r\n\r\nconst NewSurveyForm = () => {\r\n  const { user } = useAuth();\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    beggar_name: '',\r\n    beggar_age: '',\r\n    beggar_gender: '',\r\n    beggar_photo: null,\r\n    location_coordinates: null,\r\n    location_address: '',\r\n    survey_notes: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const steps = [\r\n    { id: 1, title: 'Beggar Details', icon: FiUser },\r\n    { id: 2, title: 'Location', icon: FiMapPin },\r\n    { id: 3, title: 'Photo & Notes', icon: FiCamera },\r\n    { id: 4, title: 'Review & Submit', icon: FiCheckCircle }\r\n  ];\r\n\r\n  const updateFormData = (field, value) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const nextStep = () => {\r\n    if (currentStep < steps.length) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const prevStep = () => {\r\n    if (currentStep > 1) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const getCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          updateFormData('location_coordinates', [latitude, longitude]);\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n          alert('Unable to get your location. Please enter coordinates manually.');\r\n        }\r\n      );\r\n    } else {\r\n      alert('Geolocation is not supported by this browser.');\r\n    }\r\n  };\r\n\r\n  const handlePhotoUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        updateFormData('beggar_photo', e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const surveyData = {\r\n        beggar_name: formData.beggar_name || undefined,\r\n        beggar_age: formData.beggar_age ? parseInt(formData.beggar_age) : undefined,\r\n        beggar_gender: formData.beggar_gender || undefined,\r\n        beggar_photo_url: formData.beggar_photo || undefined,\r\n        location_coordinates: formData.location_coordinates,\r\n        location_address: formData.location_address || undefined,\r\n        survey_notes: formData.survey_notes || undefined\r\n      };\r\n\r\n      // Debug: Log the token and survey data\r\n      const token = localStorage.getItem('token');\r\n      console.log('🔍 Debug: Token exists:', !!token);\r\n      console.log('🔍 Debug: Survey data:', surveyData);\r\n\r\n      const response = await fetch('/api/volunteer/surveys', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(surveyData)\r\n      });\r\n\r\n      console.log('🔍 Debug: Response status:', response.status);\r\n      console.log('🔍 Debug: Response ok:', response.ok);\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.log('🔍 Debug: Error data:', errorData);\r\n        throw new Error(errorData.error || 'Failed to create survey');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('🔍 Debug: Success result:', result);\r\n      alert('Survey created successfully!');\r\n      window.location.href = '/volunteer/surveys';\r\n    } catch (error) {\r\n      console.error('Error creating survey:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderStep1 = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Beggar Information</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Name (if known)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.beggar_name}\r\n              onChange={(e) => updateFormData('beggar_name', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter name if known\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Age (if known)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.beggar_age}\r\n              onChange={(e) => updateFormData('beggar_age', e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter age\"\r\n              min=\"0\"\r\n              max=\"120\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Gender\r\n          </label>\r\n          <select\r\n            value={formData.beggar_gender}\r\n            onChange={(e) => updateFormData('beggar_gender', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n          >\r\n            <option value=\"\">Select gender</option>\r\n            <option value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"other\">Other</option>\r\n            <option value=\"unknown\">Unknown</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          onClick={nextStep}\r\n          className=\"bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStep2 = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Location Information</h3>\r\n        \r\n        <div className=\"mb-4\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={getCurrentLocation}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 mb-4\"\r\n          >\r\n            Get Current Location\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Latitude\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"any\"\r\n              value={formData.location_coordinates ? formData.location_coordinates[0] : ''}\r\n              onChange={(e) => {\r\n                const lat = parseFloat(e.target.value);\r\n                const lng = formData.location_coordinates ? formData.location_coordinates[1] : null;\r\n                updateFormData('location_coordinates', lng !== null ? [lat, lng] : null);\r\n              }}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter latitude\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Longitude\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              step=\"any\"\r\n              value={formData.location_coordinates ? formData.location_coordinates[1] : ''}\r\n              onChange={(e) => {\r\n                const lng = parseFloat(e.target.value);\r\n                const lat = formData.location_coordinates ? formData.location_coordinates[0] : null;\r\n                updateFormData('location_coordinates', lat !== null ? [lat, lng] : null);\r\n              }}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter longitude\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Address (optional)\r\n          </label>\r\n          <textarea\r\n            value={formData.location_address}\r\n            onChange={(e) => updateFormData('location_address', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n            rows=\"3\"\r\n            placeholder=\"Enter address or landmark\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={prevStep}\r\n          className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-400\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={nextStep}\r\n          disabled={!formData.location_coordinates}\r\n          className=\"bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStep3 = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Photo & Additional Notes</h3>\r\n        \r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Photo (optional)\r\n          </label>\r\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handlePhotoUpload}\r\n              className=\"hidden\"\r\n              id=\"photo-upload\"\r\n            />\r\n            <label htmlFor=\"photo-upload\" className=\"cursor-pointer\">\r\n              {formData.beggar_photo ? (\r\n                <div>\r\n                  <img\r\n                    src={formData.beggar_photo}\r\n                    alt=\"Uploaded photo\"\r\n                    className=\"w-32 h-32 object-cover rounded-lg mx-auto mb-2\"\r\n                  />\r\n                  <p className=\"text-sm text-gray-600\">Click to change photo</p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <FiCamera className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\r\n                  <p className=\"text-sm text-gray-600\">Click to upload photo</p>\r\n                </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Additional Notes (optional)\r\n          </label>\r\n          <textarea\r\n            value={formData.survey_notes}\r\n            onChange={(e) => updateFormData('survey_notes', e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n            rows=\"4\"\r\n            placeholder=\"Enter any additional observations or notes...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={prevStep}\r\n          className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-400\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={nextStep}\r\n          className=\"bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStep4 = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Review & Submit</h3>\r\n        \r\n        <div className=\"bg-gray-50 rounded-lg p-6 space-y-4\">\r\n          <div>\r\n            <h4 className=\"font-medium text-gray-900\">Beggar Information</h4>\r\n            <p className=\"text-sm text-gray-600\">\r\n              Name: {formData.beggar_name || 'Not provided'}<br/>\r\n              Age: {formData.beggar_age || 'Not provided'}<br/>\r\n              Gender: {formData.beggar_gender || 'Not provided'}\r\n            </p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h4 className=\"font-medium text-gray-900\">Location</h4>\r\n            <p className=\"text-sm text-gray-600\">\r\n              Coordinates: {formData.location_coordinates ? \r\n                `${formData.location_coordinates[0].toFixed(6)}, ${formData.location_coordinates[1].toFixed(6)}` : \r\n                'Not provided'}<br/>\r\n              Address: {formData.location_address || 'Not provided'}\r\n            </p>\r\n          </div>\r\n          \r\n          {formData.beggar_photo && (\r\n            <div>\r\n              <h4 className=\"font-medium text-gray-900\">Photo</h4>\r\n              <img\r\n                src={formData.beggar_photo}\r\n                alt=\"Beggar photo\"\r\n                className=\"w-32 h-32 object-cover rounded-lg\"\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          {formData.survey_notes && (\r\n            <div>\r\n              <h4 className=\"font-medium text-gray-900\">Notes</h4>\r\n              <p className=\"text-sm text-gray-600\">{formData.survey_notes}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\r\n          <p className=\"text-red-800\">{error}</p>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={prevStep}\r\n          className=\"bg-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-400\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleSubmit}\r\n          disabled={isLoading || !formData.location_coordinates}\r\n          className=\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          {isLoading ? 'Submitting...' : 'Submit Survey'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderStep = () => {\r\n    switch (currentStep) {\r\n      case 1:\r\n        return renderStep1();\r\n      case 2:\r\n        return renderStep2();\r\n      case 3:\r\n        return renderStep3();\r\n      case 4:\r\n        return renderStep4();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center\">\r\n              <button\r\n                onClick={() => window.location.href = '/volunteer/surveys'}\r\n                className=\"mr-4 text-gray-600 hover:text-gray-900\"\r\n              >\r\n                <FiArrowLeft className=\"w-5 h-5\" />\r\n              </button>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  New Survey\r\n                </h1>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Create a new survey for a beggar\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Stepper */}\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            {steps.map((step, index) => {\r\n              const Icon = step.icon;\r\n              const isActive = currentStep === step.id;\r\n              const isCompleted = currentStep > step.id;\r\n              \r\n              return (\r\n                <div key={step.id} className=\"flex items-center\">\r\n                  <div className={`flex items-center justify-center w-10 h-10 rounded-full border-2 ${\r\n                    isActive \r\n                      ? 'border-primary-600 bg-primary-600 text-white'\r\n                      : isCompleted\r\n                      ? 'border-green-600 bg-green-600 text-white'\r\n                      : 'border-gray-300 bg-white text-gray-400'\r\n                  }`}>\r\n                    {isCompleted ? (\r\n                      <FiCheckCircle className=\"w-5 h-5\" />\r\n                    ) : (\r\n                      <Icon className=\"w-5 h-5\" />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className={`text-sm font-medium ${\r\n                      isActive ? 'text-primary-600' : isCompleted ? 'text-green-600' : 'text-gray-500'\r\n                    }`}>\r\n                      {step.title}\r\n                    </p>\r\n                  </div>\r\n                  {index < steps.length - 1 && (\r\n                    <div className={`flex-1 h-0.5 mx-4 ${\r\n                      isCompleted ? 'bg-green-600' : 'bg-gray-300'\r\n                    }`} />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Form Content */}\r\n        <div className=\"card\">\r\n          {renderStep()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewSurveyForm; "],"names":["NewSurveyForm","user","useAuth","currentStep","setCurrentStep","useState","formData","setFormData","beggar_name","beggar_age","beggar_gender","beggar_photo","location_coordinates","location_address","survey_notes","isLoading","setIsLoading","error","setError","steps","id","title","icon","FiUser","FiMapPin","FiCamera","FiCheckCircle","updateFormData","field","value","prev","nextStep","length","prevStep","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","alert","handlePhotoUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handleSubmit","async","surveyData","undefined","parseInt","beggar_photo_url","token","localStorage","getItem","log","response","fetch","method","headers","body","JSON","stringify","status","ok","errorData","json","Error","window","location","href","message","_jsxs","className","children","_jsx","onClick","FiArrowLeft","map","step","index","Icon","isActive","isCompleted","renderStep","type","onChange","placeholder","min","max","lat","parseFloat","lng","rows","disabled","accept","htmlFor","src","alt","toFixed"],"sourceRoot":""}